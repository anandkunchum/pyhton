## Assignment Part-1
Q1. Why do we call Python as a general purpose and high-level programming language?
Ans:
Its simple and easy for humans to understand. So we called python is general purpose and high-level programming language.

Q2. Why is Python called a dynamically typed language?
Ans:
In Python, We wont declare the type of the variable and It automatically assigns the data type to the variable at the execution time. So we call paython is dynamically typed language.

Q3. List some pros and cons of Python programming language?
Ans:
Pros - Beginner friendly, flexible, Extensible, Embeddable, highly scalable and portable 
Cons - slower than compiled languages, security, high memory consumption, complex mutli-threading.

Q4. In what all domains can we use Python?
Ans:
Since Python is the go-to programming language for domains such as artificial intelligence, machine learning and deep learning, 
it's no surprise that it's also a fundamental tool for any data scientist.

Q5. What are variable and how can we declare them?
Ans:
List of frequently used datatypes - 
int - 10
float - 10.05
str - "Anand"
bool - True
list - ["abc","xyz","qwerty"]
tuple - ("abc","xyz","qwerty")
dict - ("name":"Anand","dept":"sales")
set - {"abc","xyz","qwerty"}
Variable - it is a reserved memory location to store values.
On assigning the value to a variable, declartion of variable happen dynamically based on the value.


Q6. How can we take an input from the user in Python?
Ans:
we can take the input value string from the user using the function input()
a = input()

Q7. What is the default datatype of the value that has been taken as an input using input() function?
Ans:
string is the default datatype of the value which has been taken from the input.

Q8. What is type casting?
Ans:
type casting - convert the datatype of the variable from one to other
a = 1.0
to convert from float to int - int(1.0)

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?
Ans:
technically we cannot take more than one inputs but using comma/space seperated we can take multiple values.

Q10. What are keywords?
Ans:
Keywords are some predefined and reserved words in python that have special meanings. 
Keywords are used to define the syntax of the coding. The keyword cannot be used as an identifier, function, and variable name. 
All the keywords in python are written in lower case except True and False.

Q11. Can we use keywords as a variable? Support your answer with reason.
Ans:
The exact keyword cannot be used as a variable. Example: is = 1 (syntax error: we used the keyword "is" as variable)

Q12. What is indentation? What's the use of indentaion in Python?
Ans:
Indentation refers to the spaces at the beginning of a code line.
Where in other programming languages the indentation in code is for readability only, the indentation in Python is very important. 
Python uses indentation to indicate a block of code.

Q13. How can we throw some output in Python?
Ans:
using print function, we can throw some output. Example: print("Hello!")

Q14. What are operators in Python?
Ans:
Operators are used to perform operations on variables and values
Arithmetic operators - (+,-,*,/,%,**,//)
Assignment operators - (=,+=,-=,*=,/=,%=,//=,**=)
Comparison operators - (==,!=,>,<,>=,<=)
Logical operators - (and, or, not)
Identity operators - (is, is not)
Membership operators - (in, not in)
Bitwise operators - (&,|,~,<<,>>)

Q15. What is difference between / and // operators?
Ans:
/ is regular division(returns float)
// is floor division(returns int).

Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```
Ans:
print("```")
print("iNeuron"*4)
print("```")

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.
Ans:
var_number = int(input("Enter number:"))
if var_number % 2 == 0:
    print("Given number is Even")
else:
    print("Given number is Odd")

Q18. What are boolean operator?
Ans:
The logical operators and, or and not are also referred to as boolean operators.
While and as well as or operator needs two operands, which may evaluate to true or false, not operator needs one operand evaluating to true or false. 
Boolean and operator returns true if both operands return true.

Q19. What will the output of the following?
```
1 or 0 -> 1

0 and 0 -> 0

True and False and True -> False

1 or 0 or 0 -> 1
```
Ans: 
1
0
False
1


Q20. What are conditional statements in Python?
Ans:
A conditional statement as the name suggests itself, is used to handle conditions in your program
Example: if, if-else, elif, nested if, and nested if-else statements

Q21. What is use of 'if', 'elif' and 'else' keywords?
Ans:
if - One or more statements written with the same level of indent will be executed if the Boolean expression evaluates to True.
elif - One or more statements written with the same level of indent will be executed if the above "if" Boolean expression evaluates to False and elif Boolean expression evalutes to True
else - One or more statements written with the same level of indent will be executed if the immediate above if or elif Boolean expression evalutes to False

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".
Ans:
var_age = int(input("Enter age:"))
if var_age >= 18:
    print("I can vote")
else:
    print("I can't vote")

Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Ans:
numbers = [12, 75, 150, 180, 145, 525, 50]
even_numbers_sum = 0
for number in numbers:
    if number % 2 == 0:
        even_numbers_sum += number
print("Even numbers sum :",even_numbers_sum)

Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.
Ans:
str_input = input("Enter any 3 numbers with seperated by space:")
input_numbers_list = str_input.split(" ")
max_number = 0
for number in input_numbers_list:
    if int(number) > max_number:
        max_number = int(number)
print("Greatest number: ",max_number)

Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Ans:
numbers = [12, 75, 150, 180, 145, 525, 50]
display_numbers = []
end_of_the_loop = False
position = 0
number = 0
while not end_of_the_loop:
    number = numbers[position]
    if number > 500:
        end_of_the_loop = True
    if number <= 150 and number % 5 == 0:
        display_numbers.append(number)
    position += 1
print(display_numbers)

